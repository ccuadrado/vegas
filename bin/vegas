#!/usr/bin/env ruby

require 'vegasfs'
require 'fileutils'

include FileUtils

def daemonize(logpath)
  exit if fork
  Process.setsid
  exit if fork

  Dir.chdir "/"
  File.umask 0000
  STDIN.reopen "/dev/null"
  STDOUT.reopen logpath
  STDERR.reopen STDOUT

  yield
end

def kill(*args)
  sig = args.length == 2 ? args.shift : 'TERM'
  pid_file = args.shift
  pid = File.read(pid_file).strip

  system("kill -#{sig} #{pid} && rm #{pid_file}")
end

command = ARGV.shift
mpoint  = File.expand_path(ARGV.shift)

vegas_dir = File.join(ENV['HOME'], '.vegasfs')
router_pid = File.join(vegas_dir, 'router.pid')
driver_pid = File.join(vegas_dir, 'driver.pid')
log_file = File.join(vegas_dir, 'vegasfs.log')


if command == "mount"
  mkdir_p(vegas_dir)

  system("bundle exec rackup -Ilib -p7777 -P #{router_pid} -D")
  
  daemonize(log_file) do
    File.open(driver_pid, 'w') { |pid| pid.write(Process.pid) }

    driver = VegasFS::Driver.new(:host => 'localhost', :port => 7777)
    
    FuseFS.set_root(driver)
    FuseFS.mount_under mpoint
    FuseFS.run
  end
else
  kill 'KILL', router_pid
  kill driver_pid

  system("umount #{mpoint}")
end

